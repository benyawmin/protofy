// Mocks generated by Mockito 5.4.2 from annotations
// in Goodbytz/test/features/number_trivia/presentation/bloc/login_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:Goodbytz/core/util/input_converter.dart' as _i5;
import 'package:Goodbytz/features/card_management/domain/usecases/get_auth_data.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetOrderData].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOrderData extends _i1.Mock implements _i3.GetOrderData {
  MockGetOrderData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<dynamic, dynamic>> call(_i3.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<dynamic, dynamic>>.value(
            _FakeEither_0<dynamic, dynamic>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<dynamic, dynamic>>);
}

/// A class which mocks [InputEmailValidation].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputEmailValidation extends _i1.Mock
    implements _i5.InputEmailValidation {
  MockInputEmailValidation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<dynamic, String> orderIdValidatior(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderIdValidatior,
          [orderId],
        ),
        returnValue: _FakeEither_0<dynamic, String>(
          this,
          Invocation.method(
            #orderIdValidatior,
            [orderId],
          ),
        ),
      ) as _i2.Either<dynamic, String>);
}
